plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.10.0-SNAPSHOT'
	id "nebula.release" version "15.3.1"
	id "com.palantir.docker" version "0.26.0"
}

group = 'com.code4unb'
sourceCompatibility = '8'

repositories {
	maven { url 'https://repo.spring.io/snapshot' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.projectlombok:lombok:1.18.18'
    compileOnly 'org.projectlombok:lombok:1.18.18'
	annotationProcessor 'org.projectlombok:lombok:1.18.18'
	implementation 'com.linecorp.bot:line-bot-api-client:4.3.0'
	implementation 'com.linecorp.bot:line-bot-model:4.3.0'
	implementation 'com.linecorp.bot:line-bot-spring-boot:4.3.0'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jar {
	enabled = false
}

test {
	useJUnitPlatform()
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}

docker{
	name project.getProperties().getOrDefault("imageName",project.name.toLowerCase()).toString()
	if(System.getenv("KEYSTORE_FILE")==null||System.getenv("KEYSTORE_PASSWORD")==null){
		throw new GradleException("環境変数 KEYSTORE_FILE,KEYSTORE_PASSWORDを設定してください。")
	}
	files bootJar.archiveFile.get()
	buildArgs(['JAR_FILE': "${bootJar.getArchiveFileName().get()}","KEYSTORE_FILE":"${System.getenv("KEYSTORE_FILE")}","KEYSTORE_PASSWORD":"${System.getenv("KEYSTORE_PASSWORD")}"])
	noCache true
}

springBoot {
	buildInfo()
}
